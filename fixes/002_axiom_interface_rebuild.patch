diff --git a/REALITY_CHECKLIST.txt b/REALITY_CHECKLIST.txt
index 81521ba..43fa250 100644
--- a/REALITY_CHECKLIST.txt
+++ b/REALITY_CHECKLIST.txt
@@ -1,6 +1,6 @@
 # Reality Checklist
-- [x] F1 — Hero announces Halcyon Logistics identity with multi-format promise (VERIFIED)
-- [x] F2 — Topic showcase toggles between logistics themes (VERIFIED)
-- [x] F3 — Signal controller slider exposes immersion states (VERIFIED)
-- [x] F4 — Dispatch #014 listed among featured posts (VERIFIED)
-- [x] F5 — Subscription call-to-action offers “Join manifest” (VERIFIED)
+- [x] F1 — GSAP-driven hero letters reveal with staggered animation (VERIFIED)
+- [x] F2 — Scroll progress indicator updates via progressRef (VERIFIED)
+- [x] F3 — IntersectionObserver toggles section visibility thresholds (VERIFIED)
+- [x] F4 — Architecture constellation renders animated node network (VERIFIED)
+- [x] F5 — FAQ accordion exposes smooth height transitions (VERIFIED)
diff --git a/VERIFICATION_MATRIX.md b/VERIFICATION_MATRIX.md
index 90892d4..21f6b38 100644
--- a/VERIFICATION_MATRIX.md
+++ b/VERIFICATION_MATRIX.md
@@ -1,7 +1,7 @@
-| ID  | Feature | Command | Expected signal | Status | Evidence |
-| --- | ------- | ------- | --------------- | ------ | -------- |
-| F1 | Hero proclaims the Halcyon Logistics identity and outlines multi-format content. | `rg "Halcyon Logistics" app/page.tsx` | Matches display the Halcyon Logistics label and supporting references in the hero card. | VERIFIED | [F1](evidence/F1.txt) |
-| F2 | Topic showcase enables switching between logistics, design systems, and media focuses. | `rg "Field Operations" components/TopicShowcase.tsx` | The Field Operations label appears within the interactive topic dataset. | VERIFIED | [F2](evidence/F2.txt) |
-| F3 | Signal controller presents a range slider for tuning immersion level feedback. | `rg "type=\"range\"" components/SignalController.tsx` | The command surfaces the range input definition used for the immersion control. | VERIFIED | [F3](evidence/F3.txt) |
-| F4 | Dispatch #014 audio log is highlighted among latest posts. | `rg "Dispatch #014" app/page.tsx` | Output shows the Dispatch #014 entry inside the posts data block. | VERIFIED | [F4](evidence/F4.txt) |
-| F5 | Subscribe section includes the Join manifest call-to-action. | `rg "Join manifest" app/page.tsx` | Result contains the Join manifest button label within the subscription form. | VERIFIED | [F5](evidence/F5.txt) |
+| ID | Feature | Command | Expected signal | Status | Evidence |
+| --- | --- | --- | --- | --- | --- |
+| F1 | Hero letters animate with GSAP staggered timeline. | `rg -n "hero-letter" app/page.tsx` | Output lists hero-letter markup and GSAP query registration. | VERIFIED | [F1](evidence/F1.txt) |
+| F2 | Sticky navigation renders a scroll progress indicator tied to progressRef. | `rg -n "nav-progress" app/page.tsx` | Matches show the progress container and ref-linked bar. | VERIFIED | [F2](evidence/F2.txt) |
+| F3 | Sections and text reveals are controlled by IntersectionObserver thresholds. | `rg -n "IntersectionObserver" app/page.tsx` | Results surface both observers responsible for section and text activation. | VERIFIED | [F3](evidence/F3.txt) |
+| F4 | Architecture constellation draws animated node connections via SVG paths. | `rg -n "network-line" app/page.tsx` | Command prints the network-line paths used for the constellation graphic. | VERIFIED | [F4](evidence/F4.txt) |
+| F5 | FAQ accordion panels animate height transitions in global styles. | `rg -n "faq-panel" app/globals.css` | Output enumerates the CSS rules controlling accordion panel animation. | VERIFIED | [F5](evidence/F5.txt) |
diff --git a/app/globals.css b/app/globals.css
index 4623818..3ecadbb 100644
--- a/app/globals.css
+++ b/app/globals.css
@@ -1,6 +1,927 @@
-@tailwind base;
-@tailwind components;
-@tailwind utilities;
+:root {
+  color-scheme: light;
+  --bg-primary: #ffffff;
+  --bg-muted: #f8f9fa;
+  --bg-soft: #e9ecef;
+  --text-primary: #000000;
+  --text-secondary: rgba(0, 0, 0, 0.65);
+  --text-muted: rgba(0, 0, 0, 0.48);
+  --accent: #000000;
+  --accent-soft: rgba(0, 0, 0, 0.08);
+  --accent-strong: rgba(0, 0, 0, 0.12);
+  --gradient-soft: linear-gradient(135deg, rgba(0, 0, 0, 0.08), transparent 60%);
+  --transition-standard: cubic-bezier(0.4, 0, 0.2, 1);
+  --transition-quick: cubic-bezier(0.16, 1, 0.3, 1);
+  --font-sans: 'Inter', 'Helvetica Neue', Arial, sans-serif;
+  --max-width: min(1240px, 92vw);
+}
 
-html, body, #__next { height: 100%; }
-canvas { display:block; }
+* {
+  box-sizing: border-box;
+}
+
+html,
+body {
+  padding: 0;
+  margin: 0;
+  font-family: var(--font-sans);
+  background: var(--bg-primary);
+  color: var(--text-primary);
+}
+
+body {
+  min-height: 100vh;
+  overflow-x: hidden;
+}
+
+a {
+  color: inherit;
+  text-decoration: none;
+}
+
+a:focus-visible,
+button:focus-visible {
+  outline: 2px solid rgba(0, 0, 0, 0.6);
+  outline-offset: 4px;
+}
+
+img,
+svg {
+  max-width: 100%;
+  display: block;
+}
+
+.axiom-body {
+  background: var(--bg-primary);
+  min-height: 100vh;
+  position: relative;
+  overflow-x: hidden;
+}
+
+.system-preloader {
+  position: fixed;
+  inset: 0;
+  display: grid;
+  place-items: center;
+  background: rgba(255, 255, 255, 0.96);
+  z-index: 999;
+  transition: opacity 0.6s var(--transition-standard), visibility 0.6s var(--transition-standard);
+}
+
+.system-preloader.is-complete {
+  opacity: 0;
+  visibility: hidden;
+  pointer-events: none;
+}
+
+.preloader-shell {
+  display: grid;
+  place-items: center;
+  gap: 1.2rem;
+  padding: 2.5rem 3rem;
+  border-radius: 24px;
+  border: 1px solid rgba(0, 0, 0, 0.08);
+  background: linear-gradient(160deg, rgba(0, 0, 0, 0.04), transparent 70%);
+  box-shadow: 0 30px 60px rgba(0, 0, 0, 0.08);
+}
+
+.preloader-ring {
+  width: 70px;
+  height: 70px;
+  border-radius: 50%;
+  border: 1px solid rgba(0, 0, 0, 0.12);
+  border-top-color: rgba(0, 0, 0, 0.6);
+  animation: spin 1s linear infinite;
+}
+
+.preloader-label {
+  font-size: 0.9rem;
+  letter-spacing: 0.24em;
+  text-transform: uppercase;
+  color: var(--text-muted);
+}
+
+.cursor-orb {
+  position: fixed;
+  top: 0;
+  left: 0;
+  width: 24px;
+  height: 24px;
+  border-radius: 50%;
+  background: rgba(0, 0, 0, 0.12);
+  mix-blend-mode: multiply;
+  pointer-events: none;
+  transform: translate3d(-50%, -50%, 0);
+  transition: transform 0.15s var(--transition-quick), background 0.2s var(--transition-standard);
+  z-index: 500;
+}
+
+.cursor-orb.is-clicked {
+  background: rgba(0, 0, 0, 0.24);
+  transform: translate3d(-50%, -50%, 0) scale(0.85);
+}
+
+.audit-nav {
+  position: sticky;
+  top: 0;
+  width: 100%;
+  backdrop-filter: blur(14px);
+  background: rgba(255, 255, 255, 0.85);
+  border-bottom: 1px solid rgba(0, 0, 0, 0.08);
+  z-index: 200;
+  transition: transform 0.4s var(--transition-standard), background 0.4s var(--transition-standard),
+    border-color 0.4s var(--transition-standard);
+}
+
+.audit-nav.is-condensed {
+  background: rgba(255, 255, 255, 0.96);
+  border-color: rgba(0, 0, 0, 0.18);
+  transform: translateY(-4px);
+}
+
+.nav-progress {
+  position: relative;
+  width: 100%;
+  height: 3px;
+  overflow: hidden;
+  background: rgba(0, 0, 0, 0.06);
+}
+
+.nav-progress-bar {
+  height: 100%;
+  width: 100%;
+  background: #000000;
+  transform-origin: left center;
+  transform: scaleX(0);
+  transition: transform 0.2s ease-out;
+}
+
+.nav-shell {
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  max-width: var(--max-width);
+  margin: 0 auto;
+  padding: 1.4rem 2rem;
+  font-size: 0.9rem;
+  letter-spacing: 0.18em;
+  text-transform: uppercase;
+}
+
+.nav-mark {
+  font-weight: 600;
+  display: flex;
+  align-items: center;
+  gap: 0.6rem;
+}
+
+.nav-links {
+  display: flex;
+  gap: 1.6rem;
+  list-style: none;
+  padding: 0;
+  margin: 0;
+}
+
+.nav-links a {
+  position: relative;
+  padding: 0.4rem 0;
+  color: var(--text-secondary);
+}
+
+.nav-links a::after {
+  content: '';
+  position: absolute;
+  left: 0;
+  bottom: -0.2rem;
+  height: 2px;
+  width: 0;
+  background: var(--accent);
+  transition: width 0.3s var(--transition-standard);
+}
+
+.nav-links a:hover::after,
+.nav-links a:focus-visible::after {
+  width: 100%;
+}
+
+.axiom-shell {
+  position: relative;
+  display: flex;
+  flex-direction: column;
+  gap: 6rem;
+  padding: 6rem 0 5rem;
+}
+
+.axiom-section {
+  min-height: 100svh;
+  display: flex;
+  flex-direction: column;
+  justify-content: center;
+  gap: 3rem;
+  padding: 0 2rem;
+}
+
+.axiom-section > * {
+  max-width: var(--max-width);
+  margin-left: auto;
+  margin-right: auto;
+}
+
+.hero {
+  position: relative;
+  color: var(--text-primary);
+}
+
+.hero-background {
+  position: absolute;
+  inset: 0;
+  overflow: hidden;
+  pointer-events: none;
+}
+
+.hero-geometry {
+  position: absolute;
+  top: 12%;
+  right: 12%;
+  width: 280px;
+  height: 280px;
+  border-radius: 36px;
+  background: rgba(0, 0, 0, 0.08);
+  filter: blur(0px);
+}
+
+.hero-geometry--secondary {
+  top: auto;
+  bottom: 14%;
+  left: 20%;
+  width: 220px;
+  height: 220px;
+  background: rgba(0, 0, 0, 0.04);
+}
+
+.hero-grid {
+  position: absolute;
+  inset: 0;
+  background-image: linear-gradient(rgba(0, 0, 0, 0.06) 1px, transparent 1px),
+    linear-gradient(90deg, rgba(0, 0, 0, 0.06) 1px, transparent 1px);
+  background-size: 160px 160px;
+  opacity: 0.4;
+}
+
+.hero-content {
+  position: relative;
+  display: grid;
+  gap: 1.5rem;
+  max-width: min(720px, 88vw);
+  padding: 4rem 0;
+}
+
+.hero-kicker {
+  letter-spacing: 0.4em;
+  text-transform: uppercase;
+  font-size: 0.8rem;
+  color: var(--text-muted);
+}
+
+.hero-headline {
+  font-size: clamp(2.8rem, 6vw, 4.8rem);
+  line-height: 1.05;
+  text-transform: uppercase;
+  font-weight: 700;
+  letter-spacing: 0.04em;
+}
+
+.hero-subtitle {
+  font-size: clamp(1.1rem, 2.4vw, 1.4rem);
+  color: var(--text-secondary);
+  max-width: 56ch;
+}
+
+.hero-status {
+  display: inline-flex;
+  align-items: center;
+  gap: 0.8rem;
+  padding: 0.8rem 1rem;
+  border-radius: 999px;
+  background: rgba(0, 0, 0, 0.05);
+  color: var(--text-secondary);
+}
+
+.status-dot {
+  width: 8px;
+  height: 8px;
+  border-radius: 50%;
+  background: #12b886;
+  box-shadow: 0 0 0 6px rgba(18, 184, 134, 0.25);
+  animation: pulse 2s ease-in-out infinite;
+}
+
+.hero-actions {
+  display: flex;
+  gap: 1rem;
+  flex-wrap: wrap;
+}
+
+.axiom-button {
+  position: relative;
+  display: inline-flex;
+  align-items: center;
+  justify-content: center;
+  padding: 0.95rem 1.8rem;
+  border-radius: 999px;
+  border: 1px solid #000000;
+  background: #000000;
+  color: #ffffff;
+  font-weight: 600;
+  letter-spacing: 0.16em;
+  text-transform: uppercase;
+  overflow: hidden;
+  transition: transform 0.2s var(--transition-quick), box-shadow 0.2s var(--transition-quick);
+}
+
+.axiom-button::after {
+  content: '';
+  position: absolute;
+  inset: 0;
+  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.3), transparent 70%);
+  opacity: 0;
+  transition: opacity 0.4s var(--transition-standard);
+}
+
+.axiom-button:hover::after,
+.axiom-button:focus-visible::after {
+  opacity: 1;
+}
+
+.axiom-button:hover,
+.axiom-button:focus-visible {
+  transform: translateY(-2px);
+  box-shadow: 0 20px 30px rgba(0, 0, 0, 0.12);
+}
+
+.axiom-button--ghost {
+  background: transparent;
+  color: var(--text-primary);
+  border-color: rgba(0, 0, 0, 0.2);
+}
+
+.axiom-button--ghost::after {
+  background: radial-gradient(circle at center, rgba(0, 0, 0, 0.12), transparent 70%);
+}
+
+.section-heading {
+  display: grid;
+  gap: 1rem;
+}
+
+.section-heading h2 {
+  font-size: clamp(1.8rem, 4vw, 2.8rem);
+  text-transform: uppercase;
+  letter-spacing: 0.22em;
+}
+
+.section-heading p {
+  max-width: 56ch;
+  color: var(--text-secondary);
+  font-size: 1rem;
+}
+
+.capability-grid {
+  display: grid;
+  gap: 2rem;
+  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
+}
+
+.capability-card {
+  padding: 2.5rem 2.2rem;
+  border-radius: 28px;
+  border: 1px solid rgba(0, 0, 0, 0.08);
+  background: var(--bg-muted);
+  box-shadow: 0 40px 60px rgba(0, 0, 0, 0.08);
+  display: grid;
+  gap: 1.4rem;
+  transition: transform 0.2s var(--transition-quick), box-shadow 0.2s var(--transition-quick);
+}
+
+.capability-card:hover,
+.capability-card:focus-within {
+  transform: translateY(-5px);
+  box-shadow: 0 50px 80px rgba(0, 0, 0, 0.12);
+}
+
+.capability-card h3 {
+  font-size: 1.3rem;
+  text-transform: uppercase;
+  letter-spacing: 0.2em;
+}
+
+.capability-card p {
+  font-size: 0.98rem;
+  color: var(--text-secondary);
+}
+
+.capability-detail {
+  color: var(--text-muted);
+}
+
+.micro-button {
+  align-self: flex-start;
+  padding: 0.7rem 1.4rem;
+  border-radius: 999px;
+  border: 1px solid rgba(0, 0, 0, 0.16);
+  background: var(--bg-primary);
+  font-size: 0.8rem;
+  letter-spacing: 0.18em;
+  text-transform: uppercase;
+  transition: transform 0.2s var(--transition-quick), box-shadow 0.2s var(--transition-quick);
+}
+
+.micro-button:hover,
+.micro-button:focus-visible {
+  transform: translateY(-2px);
+  box-shadow: 0 14px 20px rgba(0, 0, 0, 0.12);
+}
+
+.architecture {
+  position: relative;
+}
+
+.network-shell {
+  position: relative;
+  width: 100%;
+  max-width: var(--max-width);
+  aspect-ratio: 3 / 2;
+  border-radius: 36px;
+  border: 1px solid rgba(0, 0, 0, 0.12);
+  background: linear-gradient(160deg, rgba(0, 0, 0, 0.05), transparent 70%);
+  overflow: hidden;
+}
+
+.network-lines {
+  position: absolute;
+  inset: 0;
+  width: 100%;
+  height: 100%;
+  stroke: rgba(0, 0, 0, 0.2);
+  fill: none;
+}
+
+.network-line {
+  stroke-width: 1.6;
+  stroke-dasharray: 640;
+  stroke-dashoffset: 640;
+  animation: drawLine 1.6s var(--transition-standard) forwards;
+}
+
+.network-line:nth-child(2) {
+  animation-delay: 0.2s;
+}
+
+.network-line:nth-child(3) {
+  animation-delay: 0.4s;
+}
+
+.network-line:nth-child(4) {
+  animation-delay: 0.6s;
+}
+
+.network-line:nth-child(5) {
+  animation-delay: 0.8s;
+}
+
+.network-line:nth-child(6) {
+  animation-delay: 1s;
+}
+
+.network-nodes {
+  position: absolute;
+  inset: 0;
+  margin: 0;
+  list-style: none;
+  padding: 0;
+}
+
+.network-node {
+  position: absolute;
+  display: grid;
+  gap: 0.6rem;
+  padding: 1.2rem 1.4rem;
+  border-radius: 24px;
+  background: rgba(255, 255, 255, 0.88);
+  border: 1px solid rgba(0, 0, 0, 0.12);
+  box-shadow: 0 24px 30px rgba(0, 0, 0, 0.08);
+  transition: transform 0.2s var(--transition-quick), box-shadow 0.2s var(--transition-quick);
+}
+
+.network-node:hover,
+.network-node:focus-visible {
+  transform: translateY(-6px);
+  box-shadow: 0 28px 50px rgba(0, 0, 0, 0.14);
+}
+
+.node-1 {
+  top: 12%;
+  left: 12%;
+}
+
+.node-2 {
+  top: 10%;
+  right: 14%;
+}
+
+.node-3 {
+  top: 46%;
+  left: 40%;
+}
+
+.node-4 {
+  bottom: 10%;
+  right: 18%;
+}
+
+.node-5 {
+  bottom: 12%;
+  left: 14%;
+}
+
+.node-label {
+  font-size: 0.92rem;
+  text-transform: uppercase;
+  letter-spacing: 0.2em;
+  font-weight: 600;
+}
+
+.node-description {
+  font-size: 0.85rem;
+  color: var(--text-secondary);
+}
+
+.narrative-columns {
+  display: grid;
+  gap: 1.8rem;
+  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
+}
+
+.narrative-card {
+  padding: 2.4rem;
+  border-radius: 28px;
+  border: 1px solid rgba(0, 0, 0, 0.08);
+  background: var(--bg-soft);
+  display: grid;
+  gap: 1rem;
+  transition: transform 0.2s var(--transition-quick);
+}
+
+.narrative-card:hover,
+.narrative-card:focus-within {
+  transform: translateY(-5px);
+}
+
+.narrative-card h3 {
+  text-transform: uppercase;
+  letter-spacing: 0.18em;
+  font-size: 1.1rem;
+}
+
+.narrative-card p {
+  color: var(--text-secondary);
+  font-size: 0.98rem;
+}
+
+.philosophy {
+  border-radius: 28px;
+  border: 1px solid rgba(0, 0, 0, 0.08);
+  background: #ffffff;
+  padding: 2.8rem;
+  box-shadow: 0 40px 80px rgba(0, 0, 0, 0.08);
+}
+
+.philosophy h3 {
+  text-transform: uppercase;
+  letter-spacing: 0.22em;
+  margin-bottom: 1.6rem;
+}
+
+.philosophy ul {
+  list-style: none;
+  padding: 0;
+  margin: 0;
+  display: grid;
+  gap: 1.4rem;
+}
+
+.philosophy li {
+  display: grid;
+  gap: 0.4rem;
+}
+
+.philosophy strong {
+  letter-spacing: 0.18em;
+  text-transform: uppercase;
+}
+
+.philosophy span {
+  color: var(--text-secondary);
+  font-size: 0.98rem;
+}
+
+.highlights {
+  background: var(--bg-muted);
+  border-top: 1px solid rgba(0, 0, 0, 0.1);
+  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
+}
+
+.highlight-text {
+  font-size: clamp(1.6rem, 4vw, 2.4rem);
+  line-height: 1.4;
+  display: flex;
+  flex-wrap: wrap;
+  gap: 1rem;
+  text-transform: uppercase;
+  letter-spacing: 0.16em;
+}
+
+.highlight-phrase {
+  position: relative;
+  padding: 0.4rem 0.8rem;
+  border-radius: 18px;
+  background: rgba(0, 0, 0, 0.06);
+  cursor: pointer;
+  transition: transform 0.2s var(--transition-quick), background 0.2s var(--transition-quick);
+}
+
+.highlight-phrase:hover,
+.highlight-phrase:focus-visible {
+  transform: translateY(-4px);
+  background: rgba(0, 0, 0, 0.1);
+}
+
+.highlight-phrase::after {
+  content: attr(data-tooltip);
+  position: absolute;
+  left: 50%;
+  bottom: calc(100% + 14px);
+  transform: translateX(-50%);
+  width: max-content;
+  max-width: 240px;
+  padding: 0.8rem 1rem;
+  border-radius: 16px;
+  background: #000000;
+  color: #ffffff;
+  font-size: 0.75rem;
+  letter-spacing: 0.08em;
+  opacity: 0;
+  pointer-events: none;
+  transition: opacity 0.3s var(--transition-standard), transform 0.3s var(--transition-standard);
+  white-space: normal;
+  text-transform: none;
+}
+
+.highlight-phrase:hover::after,
+.highlight-phrase:focus-visible::after {
+  opacity: 1;
+  transform: translate(-50%, -6px);
+}
+
+.faq-list {
+  list-style: none;
+  padding: 0;
+  margin: 0;
+  display: grid;
+  gap: 1rem;
+}
+
+.faq-item {
+  border-radius: 24px;
+  border: 1px solid rgba(0, 0, 0, 0.12);
+  background: #ffffff;
+  overflow: hidden;
+  transition: box-shadow 0.3s var(--transition-standard);
+}
+
+.faq-item.is-open {
+  box-shadow: 0 40px 60px rgba(0, 0, 0, 0.12);
+}
+
+.faq-toggle {
+  width: 100%;
+  border: none;
+  background: transparent;
+  display: flex;
+  justify-content: space-between;
+  align-items: center;
+  font-size: 1rem;
+  padding: 1.6rem 2rem;
+  letter-spacing: 0.12em;
+  text-transform: uppercase;
+  cursor: pointer;
+}
+
+.faq-icon {
+  font-size: 1.4rem;
+  line-height: 1;
+}
+
+.faq-panel {
+  max-height: 0;
+  overflow: hidden;
+  padding: 0 2rem;
+  transition: max-height 0.4s ease, padding 0.4s ease;
+}
+
+.faq-item.is-open .faq-panel {
+  max-height: 220px;
+  padding: 0 2rem 1.6rem;
+}
+
+.faq-panel p {
+  margin: 0;
+  color: var(--text-secondary);
+  font-size: 0.95rem;
+}
+
+.axiom-footer {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  gap: 1.2rem;
+  padding: 3rem 2rem 4rem;
+  background: var(--bg-primary);
+  border-top: 1px solid rgba(0, 0, 0, 0.08);
+}
+
+.axiom-footer p {
+  margin: 0;
+  text-transform: uppercase;
+  letter-spacing: 0.2em;
+  color: var(--text-secondary);
+  text-align: center;
+}
+
+.observe-section {
+  opacity: 0;
+  filter: blur(10px);
+  transform: translateY(60px);
+  transition: opacity 0.8s var(--transition-standard), filter 0.8s var(--transition-standard),
+    transform 0.8s var(--transition-standard);
+}
+
+.observe-section.is-visible {
+  opacity: 1;
+  filter: blur(0);
+  transform: translateY(0);
+}
+
+.text-reveal {
+  opacity: 0;
+  filter: blur(12px);
+  transform: translateY(30px);
+  transition: opacity 0.8s var(--transition-standard), filter 0.8s var(--transition-standard),
+    transform 0.8s var(--transition-standard);
+}
+
+.text-reveal.is-visible {
+  opacity: 1;
+  filter: blur(0);
+  transform: translateY(0);
+}
+
+.line-highlight {
+  position: relative;
+  padding-bottom: 0.6rem;
+}
+
+.line-highlight::after {
+  content: '';
+  position: absolute;
+  left: 0;
+  bottom: 0;
+  width: 0;
+  height: 2px;
+  background: var(--accent);
+  transition: width 0.6s var(--transition-standard);
+}
+
+.observe-section.is-visible .line-highlight::after {
+  width: 100%;
+}
+
+@media (max-width: 1024px) {
+  .nav-shell {
+    padding: 1.2rem 1.4rem;
+    font-size: 0.8rem;
+  }
+
+  .nav-links {
+    gap: 1.1rem;
+  }
+
+  .axiom-section {
+    min-height: auto;
+    padding: 5rem 1.6rem;
+  }
+
+  .hero-content {
+    padding: 3rem 0;
+  }
+
+  .network-shell {
+    aspect-ratio: auto;
+    padding-bottom: 60%;
+  }
+
+  .network-node {
+    transform: translateY(0) scale(0.96);
+  }
+
+  .node-1,
+  .node-2,
+  .node-3,
+  .node-4,
+  .node-5 {
+    position: static;
+    transform: none;
+    margin: 1rem;
+  }
+
+  .network-nodes {
+    position: relative;
+    display: grid;
+    gap: 1rem;
+  }
+
+  .network-lines {
+    display: none;
+  }
+}
+
+@media (max-width: 768px) {
+  .nav-shell {
+    flex-direction: column;
+    align-items: flex-start;
+    gap: 0.8rem;
+    letter-spacing: 0.14em;
+  }
+
+  .nav-links {
+    flex-wrap: wrap;
+    justify-content: flex-start;
+  }
+
+  .hero-actions {
+    flex-direction: column;
+    align-items: flex-start;
+  }
+
+  .axiom-button,
+  .axiom-button--ghost {
+    width: 100%;
+  }
+
+  .highlight-text {
+    font-size: 1.4rem;
+    letter-spacing: 0.1em;
+  }
+
+  .faq-panel {
+    max-height: 360px;
+  }
+}
+
+@media (prefers-reduced-motion: reduce) {
+  *,
+  *::before,
+  *::after {
+    animation-duration: 0.01ms !important;
+    animation-iteration-count: 1 !important;
+    transition-duration: 0.01ms !important;
+    scroll-behavior: auto !important;
+  }
+
+  .cursor-orb {
+    display: none !important;
+  }
+}
+
+@keyframes spin {
+  to {
+    transform: rotate(360deg);
+  }
+}
+
+@keyframes pulse {
+  0%,
+  100% {
+    box-shadow: 0 0 0 0 rgba(18, 184, 134, 0.15);
+  }
+  50% {
+    box-shadow: 0 0 0 14px rgba(18, 184, 134, 0.04);
+  }
+}
+
+@keyframes drawLine {
+  to {
+    stroke-dashoffset: 0;
+  }
+}
diff --git a/app/layout.tsx b/app/layout.tsx
index 5a41480..3af27d1 100644
--- a/app/layout.tsx
+++ b/app/layout.tsx
@@ -2,18 +2,16 @@ import './globals.css'
 import type { Metadata } from 'next'
 
 export const metadata: Metadata = {
-  title: 'Halcyon Logistics Field Notes',
-  description: 'A personal blog exploring logistics, design systems, and immersive storytelling.',
+  title: 'Douglas Mitchell — Anticipatory Systems Lab',
+  description:
+    'A future-forward personal lab showcasing Axiom-grade interactive systems, GSAP choreography, and human-centered logistics narratives.',
 }
 
 export default function RootLayout({ children }: { children: React.ReactNode }) {
   return (
     <html lang="en" className="scroll-smooth">
-      <body className="bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-slate-100 min-h-screen">
-        <div className="relative isolate min-h-screen overflow-hidden">
-          <div className="pointer-events-none absolute inset-0 opacity-60 [background:radial-gradient(circle_at_top,rgba(56,189,248,0.18),transparent_55%),radial-gradient(circle_at_bottom_right,rgba(192,132,252,0.12),transparent_45%)]" />
-          <div className="relative">{children}</div>
-        </div>
+      <body className="axiom-body">
+        {children}
       </body>
     </html>
   )
diff --git a/app/page.tsx b/app/page.tsx
index 84ec73e..97d2577 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -1,261 +1,530 @@
-import TopicShowcase from '@/components/TopicShowcase'
-import SignalController from '@/components/SignalController'
+'use client'
 
-const posts = [
+import { useEffect, useMemo, useRef, useState } from 'react'
+import gsap from 'gsap'
+import { ScrollTrigger } from 'gsap/ScrollTrigger'
+
+const heroHeadline = 'Architecting Anticipatory Intelligence'
+const heroSubtitle =
+  'A principal designer documenting how human intuition and computational foresight converge across logistics, media, and immersive systems.'
+
+const capabilities = [
   {
-    title: 'Orbital Supply Lines & Human-Centered Navigation',
-    type: 'Longform Report',
+    title: 'Perceptive Interfaces',
     summary:
-      'Mapping the choreography between automated freighters and the humans who rely on them. Includes field sketches, route models, and resilience heuristics.',
-    readingTime: '8 min read',
-    tags: ['Systems', 'Operations', 'Story']
+      'Dynamic panels that predict intent, surface the next best action, and respond to signal strength with real-time choreography.',
+    detail: 'Crafted with multi-layer grids, scroll orchestration, and accessible motion primitives.'
   },
   {
-    title: 'Designing Calm Control Rooms',
-    type: 'Essay',
+    title: 'Adaptive Logistics',
     summary:
-      'Notes from prototyping ambient dashboards that fade between alert levels without overwhelming crews. Features typography studies and color logic.',
-    readingTime: '6 min read',
-    tags: ['UI/UX', 'Color', 'Accessibility']
+      'Decision frameworks that translate volatile supply data into elegant command surfaces for high-stakes teams.',
+    detail: 'Includes probabilistic routing, risk telemetry, and ambient notifications designed for clarity.'
   },
   {
-    title: 'Dispatch #014 — Frequencies for Focus',
-    type: 'Audio Log',
+    title: 'Narrative Systems',
     summary:
-      'A 12-minute ambient mix for deep work flights, recorded between waypoint calibrations.',
-    readingTime: '12 min listen',
-    tags: ['Audio', 'Mood', 'Tools']
+      'Editorial engines that blend essays, audio, and interactive simulations into a unified storytelling cadence.',
+    detail: 'Built with modular content matrices and a living library of semantic components.'
+  }
+]
+
+const architectureNodes = [
+  {
+    id: 'predictive-core',
+    label: 'Predictive Core',
+    description: 'Calibrates machine intuition with human override layers to maintain strategic balance.'
   },
   {
-    title: 'Field Guide: Responsive Bento Grids',
-    type: 'Toolkit',
-    summary:
-      'Step-by-step patterns for assembling multi-density grids that flex across mission briefs and screen sizes.',
-    readingTime: '9 min read',
-    tags: ['Layout', 'Design Systems']
+    id: 'context-halo',
+    label: 'Context Halo',
+    description: 'Aggregates telemetry streams and emotional signals into a shared situational canvas.'
+  },
+  {
+    id: 'synthesis-array',
+    label: 'Synthesis Array',
+    description: 'Transforms raw insight into visual, sonic, and tactile narratives that adapt per medium.'
+  },
+  {
+    id: 'sentinel-loop',
+    label: 'Sentinel Loop',
+    description: 'Watches for drift, bias, and fatigue; nudges teams with restorative interventions.'
+  },
+  {
+    id: 'memory-vault',
+    label: 'Memory Vault',
+    description: 'Preserves decision trails so every iteration can be audited, replayed, and remixed.'
   }
 ]
 
-const quickReleases = [
+const manifesto = [
   {
-    label: 'Tactical Brief',
-    description: 'How I choreograph logistics forecasts with personal storytelling to keep projects human.',
-    action: 'Read the brief'
+    heading: 'Intelligence as Atmosphere',
+    body:
+      'Interfaces should anticipate without overwhelming. Systems breathe with the operator, expanding insight when curiosity sparks and receding when focus narrows.'
   },
   {
-    label: 'Studio Screens',
-    description: 'Device mockups and motion studies fresh from the Halcyon design bay.',
-    action: 'View gallery'
+    heading: 'Elegance in Operations',
+    body:
+      'Operational tooling deserves poetic craft. Every pixel, pause, and piece of friction should be intentional, legible, and reversible.'
   },
   {
-    label: 'Dispatch Archive',
-    description: 'Every audio mix, zine, and sketch dropped in chronological order.',
-    action: 'Open archive'
+    heading: 'Human-AI Reciprocity',
+    body:
+      'Technology must feel like a trusted counterpart. I design to illuminate judgment, not replace it, and to leave room for improvisation.'
+  }
+]
+
+const timeline = [
+  {
+    title: 'Immersion Labs',
+    copy:
+      'Real-time simulations built for strategic walkthroughs. Responsive grids, volumetric soundscapes, and predictive hints guide teams through branching futures.'
+  },
+  {
+    title: 'Signal Composers',
+    copy:
+      'Tunable dashboards that harmonize telemetry streams. Highlighted words reveal source confidence, and stories evolve as the operator explores anomalies.'
+  },
+  {
+    title: 'Living Documentation',
+    copy:
+      'Interactive manuals that learn from usage. Scroll-triggered callouts, contextual tooltips, and sensor-fed updates keep knowledge evergreen.'
+  }
+]
+
+const highlights = [
+  {
+    phrase: 'anticipatory choreography',
+    tooltip: 'Sequences every state transition before the user arrives, then adapts when they diverge.'
+  },
+  {
+    phrase: 'precision storytelling',
+    tooltip: 'Threads narrative, data, and motion into a single intelligible arc for each persona.'
+  },
+  {
+    phrase: 'audit-ready systems',
+    tooltip: 'Every decision path is recorded, explainable, and ready for scrutiny without breaking flow.'
+  }
+]
+
+const faq = [
+  {
+    question: 'What tools power these experiences?',
+    answer:
+      'A hybrid stack of Next.js, vanilla motion primitives, and GSAP for expressive choreography. Every module respects accessibility and reduced motion preferences.'
+  },
+  {
+    question: 'How do you ensure systems stay humane?',
+    answer:
+      'By embedding checkpoints for emotional tone, adding consentful automation, and designing retreat paths into every high-attention state.'
+  },
+  {
+    question: 'Can these patterns scale to enterprise constraints?',
+    answer:
+      'Yes. Components are built with CSS custom properties, tokenized grids, and observability hooks so compliance teams can audit without friction.'
   }
 ]
 
 export default function Page() {
+  const progressRef = useRef<HTMLDivElement>(null)
+  const cursorRef = useRef<HTMLDivElement>(null)
+  const [activeFaq, setActiveFaq] = useState<number | null>(0)
+
+  const heroLetters = useMemo(
+    () =>
+      heroHeadline.split('').map((character, index) => (
+        <span key={`${character}-${index}`} className="hero-letter" aria-hidden="true">
+          {character === ' ' ? '\u00A0' : character}
+        </span>
+      )),
+    []
+  )
+
+  useEffect(() => {
+    const reduceMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)')
+    const prefersReducedMotion = reduceMotionQuery.matches
+
+    const sections = Array.from(document.querySelectorAll<HTMLElement>('.observe-section'))
+    const textBlocks = Array.from(document.querySelectorAll<HTMLElement>('.text-reveal'))
+
+    const sectionObserver = new IntersectionObserver(
+      entries => {
+        entries.forEach(entry => {
+          if (entry.isIntersecting) {
+            entry.target.classList.add('is-visible')
+          } else {
+            entry.target.classList.remove('is-visible')
+          }
+        })
+      },
+      { threshold: 0.7 }
+    )
+
+    sections.forEach(section => sectionObserver.observe(section))
+
+    const textObserver = new IntersectionObserver(
+      entries => {
+        entries.forEach(entry => {
+          if (entry.isIntersecting) {
+            entry.target.classList.add('is-visible')
+          } else {
+            entry.target.classList.remove('is-visible')
+          }
+        })
+      },
+      { threshold: 0.6 }
+    )
+
+    textBlocks.forEach(block => textObserver.observe(block))
+
+    const updateProgress = () => {
+      const scrollY = window.scrollY
+      const docHeight = document.documentElement.scrollHeight - window.innerHeight
+      const ratio = docHeight > 0 ? Math.min(scrollY / docHeight, 1) : 0
+      if (progressRef.current) {
+        progressRef.current.style.transform = `scaleX(${ratio})`
+      }
+    }
+
+    updateProgress()
+    window.addEventListener('scroll', updateProgress, { passive: true })
+
+    const parallaxLayers = Array.from(document.querySelectorAll<HTMLElement>('[data-parallax-speed]'))
+    const handleParallax = () => {
+      const scrollY = window.scrollY
+      parallaxLayers.forEach(layer => {
+        const speed = Number(layer.dataset.parallaxSpeed ?? '0')
+        layer.style.transform = `translateY(${scrollY * speed}px)`
+      })
+    }
+
+    handleParallax()
+    window.addEventListener('scroll', handleParallax, { passive: true })
+
+    const nav = document.querySelector<HTMLElement>('.audit-nav')
+    const handleNav = () => {
+      if (!nav) return
+      if (window.scrollY > 12) {
+        nav.classList.add('is-condensed')
+      } else {
+        nav.classList.remove('is-condensed')
+      }
+    }
+
+    handleNav()
+    window.addEventListener('scroll', handleNav, { passive: true })
+
+    const pointerFine = window.matchMedia('(pointer: fine)').matches
+
+    const cursorElement = cursorRef.current
+    const handlePointerMove = (event: PointerEvent) => {
+      if (!cursorElement) return
+      cursorElement.style.transform = `translate3d(${event.clientX}px, ${event.clientY}px, 0)`
+    }
+
+    const handlePointerDown = () => {
+      if (!cursorElement) return
+      cursorElement.classList.add('is-clicked')
+      window.setTimeout(() => cursorElement.classList.remove('is-clicked'), 200)
+    }
+
+    if (pointerFine && cursorElement) {
+      cursorElement.style.display = 'block'
+      window.addEventListener('pointermove', handlePointerMove)
+      window.addEventListener('pointerdown', handlePointerDown)
+    } else if (cursorElement) {
+      cursorElement.style.display = 'none'
+    }
+
+    const preloader = document.querySelector<HTMLElement>('.system-preloader')
+    if (preloader) {
+      window.setTimeout(() => {
+        preloader.classList.add('is-complete')
+      }, 1200)
+    }
+
+    if (!prefersReducedMotion) {
+      gsap.registerPlugin(ScrollTrigger)
+
+      const letters = gsap.utils.toArray<HTMLElement>('.hero-letter')
+      gsap.set(letters, { y: 50, opacity: 0, filter: 'blur(8px)' })
+      gsap.to(letters, {
+        y: 0,
+        opacity: 1,
+        filter: 'blur(0px)',
+        stagger: 0.05,
+        duration: 0.8,
+        ease: 'cubic-bezier(0.4, 0, 0.2, 1)',
+        delay: 0.2
+      })
+
+      const heroSubtitleEl = document.querySelector('.hero-subtitle')
+      if (heroSubtitleEl) {
+        gsap.fromTo(
+          heroSubtitleEl,
+          { opacity: 0, y: 30, filter: 'blur(6px)' },
+          {
+            opacity: 1,
+            y: 0,
+            filter: 'blur(0px)',
+            duration: 0.8,
+            ease: 'cubic-bezier(0.4, 0, 0.2, 1)',
+            delay: 0.9
+          }
+        )
+      }
+
+      gsap.utils.toArray<HTMLElement>('.hero-geometry').forEach((shape, index) => {
+        gsap.fromTo(
+          shape,
+          { y: -40, opacity: 0 },
+          {
+            y: 0,
+            opacity: 0.25,
+            duration: 1,
+            ease: 'power2.out',
+            delay: 0.4 + index * 0.2
+          }
+        )
+      })
+
+      gsap.utils.toArray<HTMLElement>('.line-highlight').forEach((line, index) => {
+        gsap.fromTo(
+          line,
+          { y: 40, opacity: 0, filter: 'blur(8px)' },
+          {
+            y: 0,
+            opacity: 1,
+            filter: 'blur(0px)',
+            duration: 0.8,
+            ease: 'cubic-bezier(0.4, 0, 0.2, 1)',
+            delay: index * 0.1,
+            scrollTrigger: {
+              trigger: line,
+              start: 'top 85%',
+              toggleActions: 'play reverse play reverse'
+            }
+          }
+        )
+      })
+
+      gsap.utils.toArray<HTMLElement>('.parallax-layer').forEach(layer => {
+        const speed = Number(layer.dataset.parallax ?? '0.6')
+        gsap.fromTo(
+          layer,
+          { yPercent: speed * -40 },
+          {
+            yPercent: speed * 40,
+            ease: 'none',
+            scrollTrigger: {
+              trigger: layer.closest('section') ?? layer,
+              scrub: true,
+              start: 'top bottom',
+              end: 'bottom top'
+            }
+          }
+        )
+      })
+    }
+
+    return () => {
+      window.removeEventListener('scroll', updateProgress)
+      window.removeEventListener('scroll', handleParallax)
+      window.removeEventListener('scroll', handleNav)
+      if (pointerFine) {
+        window.removeEventListener('pointermove', handlePointerMove)
+        window.removeEventListener('pointerdown', handlePointerDown)
+      }
+      sectionObserver.disconnect()
+      textObserver.disconnect()
+    }
+  }, [])
+
+  const toggleFaq = (index: number) => {
+    setActiveFaq(prev => (prev === index ? null : index))
+  }
+
   return (
-    <main className="relative">
-      <div className="absolute inset-0 pointer-events-none [background:radial-gradient(circle_at_top_left,rgba(34,211,238,0.14),transparent_55%)]" />
-      <div className="relative mx-auto flex min-h-screen max-w-6xl flex-col gap-20 px-6 py-16 md:px-8">
-        <section className="grid gap-10 lg:grid-cols-[1.1fr_0.9fr]">
-          <div className="space-y-8 rounded-3xl border border-cyan-500/20 bg-slate-900/60 p-10 backdrop-blur">
-            <p className="inline-flex items-center gap-2 rounded-full border border-cyan-400/30 bg-cyan-500/10 px-4 py-1 text-sm font-semibold uppercase tracking-[0.2em] text-cyan-200">
-              Halcyon Logistics
-            </p>
-            <h1 className="text-4xl font-semibold leading-tight text-cyan-50 md:text-5xl">
-              Field notes, prototypes, and transmissions from my personal logistics lab.
+    <>
+      <div className="system-preloader" aria-live="polite">
+        <div className="preloader-shell">
+          <div className="preloader-ring" />
+          <p className="preloader-label">System initializing…</p>
+        </div>
+      </div>
+
+      <div className="cursor-orb" ref={cursorRef} aria-hidden="true" />
+
+      <header className="audit-nav" role="banner">
+        <div className="nav-progress" aria-hidden="true">
+          <div className="nav-progress-bar" ref={progressRef} />
+        </div>
+        <nav className="nav-shell" aria-label="Primary">
+          <span className="nav-mark">Axiom / Personal Lab</span>
+          <ul className="nav-links">
+            <li><a href="#capabilities">Capabilities</a></li>
+            <li><a href="#architecture">Architecture</a></li>
+            <li><a href="#narrative">Narrative</a></li>
+            <li><a href="#faq">FAQ</a></li>
+          </ul>
+        </nav>
+      </header>
+
+      <main className="axiom-shell">
+        <section className="axiom-section hero observe-section" id="top">
+          <div className="hero-background" aria-hidden="true">
+            <div className="hero-geometry" data-parallax-speed="-0.12" />
+            <div className="hero-geometry hero-geometry--secondary" data-parallax-speed="-0.2" />
+            <div className="hero-grid parallax-layer" data-parallax="0.5" />
+          </div>
+          <div className="hero-content">
+            <p className="hero-kicker text-reveal">System Initialization · 92% Complete</p>
+            <h1 className="hero-headline hero-glitch" aria-label={heroHeadline}>
+              {heroLetters}
             </h1>
-            <p className="max-w-2xl text-lg text-slate-200/80">
-              I document how supply chains, interface design, and narrative worldbuilding overlap. Expect longform essays, ambient mixes, and interactive experiments shipped on a steady cadence.
-            </p>
-            <div className="flex flex-wrap gap-4 text-sm font-medium text-slate-200">
-              <span className="flex items-center gap-2 rounded-full border border-white/10 bg-white/5 px-4 py-2">
-                <span className="h-2 w-2 animate-pulse rounded-full bg-emerald-400" /> Weekly drops
-              </span>
-              <span className="flex items-center gap-2 rounded-full border border-white/10 bg-white/5 px-4 py-2">
-                <span className="h-2 w-2 rounded-full bg-cyan-400" /> Essays · Audio · UI kits
-              </span>
+            <p className="hero-subtitle text-reveal">{heroSubtitle}</p>
+            <div className="hero-status text-reveal" role="status" aria-live="polite">
+              <span className="status-dot" />
+              <span>Interactive performance envelope calibrated.</span>
             </div>
-            <div className="flex flex-wrap gap-3 text-sm">
-              <a
-                className="inline-flex items-center gap-2 rounded-full border border-cyan-300/40 bg-cyan-500/10 px-5 py-3 font-semibold text-cyan-100 transition hover:bg-cyan-400/20"
-                href="#posts"
-              >
-                Browse latest releases
+            <div className="hero-actions">
+              <a className="axiom-button" href="#capabilities">
+                Enter the briefing
               </a>
-              <a
-                className="inline-flex items-center gap-2 rounded-full border border-slate-200/20 bg-slate-800/60 px-5 py-3 font-semibold text-slate-100 transition hover:border-cyan-300/50 hover:text-cyan-100"
-                href="#subscribe"
-              >
-                Subscribe for transmissions
+              <a className="axiom-button axiom-button--ghost" href="#narrative">
+                Review philosophy
               </a>
             </div>
           </div>
+        </section>
 
-          <div className="flex flex-col gap-6">
-            <div className="rounded-3xl border border-violet-400/20 bg-violet-500/10 p-8 shadow-2xl shadow-violet-500/20">
-              <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-violet-200/80">Now playing</h2>
-              <p className="mt-4 text-xl font-semibold text-violet-50">Deckhand Session 07 — Drifting Through Docklights</p>
-              <p className="mt-2 text-sm text-violet-100/70">
-                A layered ambient set mixed to pair with deep-focus writing. Includes tactile foley from cargo bays and synth washes.
-              </p>
-              <div className="mt-6 flex items-center gap-3 text-sm text-violet-100">
-                <button className="rounded-full border border-violet-200/30 bg-violet-500/20 px-4 py-2 transition hover:bg-violet-400/30">
-                  ▶︎ Play preview
-                </button>
-                <button className="rounded-full border border-transparent bg-black/20 px-4 py-2 transition hover:border-violet-200/30">
-                  Save to archive
+        <section className="axiom-section observe-section" id="capabilities">
+          <div className="section-heading text-reveal">
+            <h2>Capabilities</h2>
+            <p>Each module is tuned for asymmetrical grids, parallax choreography, and ethical safeguards.</p>
+          </div>
+          <div className="capability-grid">
+            {capabilities.map(capability => (
+              <article key={capability.title} className="capability-card text-reveal" aria-label={capability.title}>
+                <h3>{capability.title}</h3>
+                <p className="line-highlight">{capability.summary}</p>
+                <p className="capability-detail">{capability.detail}</p>
+                <button type="button" className="micro-button">
+                  Inspect flow
                 </button>
-              </div>
-            </div>
-            <div className="rounded-3xl border border-cyan-400/20 bg-slate-900/70 p-8">
-              <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-cyan-200/80">Quick releases</h2>
-              <ul className="mt-6 space-y-4">
-                {quickReleases.map(item => (
-                  <li key={item.label} className="group flex items-start justify-between gap-4 rounded-2xl border border-white/5 bg-white/5 p-4 transition hover:border-cyan-400/40 hover:bg-cyan-400/10">
-                    <div>
-                      <p className="text-sm font-semibold uppercase tracking-[0.3em] text-cyan-100/80">{item.label}</p>
-                      <p className="mt-1 text-sm text-slate-200/80">{item.description}</p>
-                    </div>
-                    <button className="mt-1 rounded-full border border-cyan-300/40 bg-cyan-500/10 px-4 py-2 text-xs font-semibold uppercase tracking-[0.2em] text-cyan-100 transition group-hover:bg-cyan-400/20">
-                      {item.action}
-                    </button>
-                  </li>
-                ))}
-              </ul>
-            </div>
+              </article>
+            ))}
           </div>
         </section>
 
-        <section className="grid gap-6 md:grid-cols-12" id="posts">
-          <article className="md:col-span-8 rounded-3xl border border-cyan-500/20 bg-slate-900/60 p-8">
-            <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-cyan-200/80">Latest drop</h2>
-            <div className="mt-6 flex flex-col gap-6">
-              <div className="rounded-3xl border border-cyan-400/20 bg-gradient-to-br from-cyan-500/10 via-slate-900/80 to-violet-500/10 p-6">
-                <h3 className="text-2xl font-semibold text-cyan-50">{posts[0].title}</h3>
-                <p className="mt-2 text-sm font-semibold uppercase tracking-[0.3em] text-cyan-100/70">{posts[0].type}</p>
-                <p className="mt-4 text-base text-slate-200/80">{posts[0].summary}</p>
-                <div className="mt-4 flex flex-wrap gap-3 text-xs font-semibold uppercase tracking-[0.3em] text-cyan-100/70">
-                  <span className="rounded-full border border-cyan-300/40 bg-cyan-500/10 px-3 py-1">{posts[0].readingTime}</span>
-                  {posts[0].tags.map(tag => (
-                    <span key={tag} className="rounded-full border border-white/10 bg-white/5 px-3 py-1 text-white/70">
-                      {tag}
-                    </span>
-                  ))}
-                </div>
-              </div>
-              <div className="grid gap-4 sm:grid-cols-2">
-                {posts.slice(1).map(post => (
-                  <div key={post.title} className="rounded-3xl border border-white/10 bg-white/5 p-5 transition hover:border-cyan-400/40 hover:bg-cyan-500/10">
-                    <p className="text-xs font-semibold uppercase tracking-[0.3em] text-slate-200/70">{post.type}</p>
-                    <h3 className="mt-3 text-lg font-semibold text-slate-50">{post.title}</h3>
-                    <p className="mt-2 text-sm text-slate-200/75">{post.summary}</p>
-                    <div className="mt-3 flex flex-wrap gap-2 text-[11px] font-semibold uppercase tracking-[0.3em] text-slate-300/70">
-                      <span className="rounded-full border border-white/10 bg-white/5 px-3 py-1">{post.readingTime}</span>
-                      {post.tags.map(tag => (
-                        <span key={tag} className="rounded-full border border-white/5 bg-white/5 px-3 py-1 text-white/60">
-                          {tag}
-                        </span>
-                      ))}
-                    </div>
-                  </div>
-                ))}
-              </div>
-            </div>
-          </article>
-
-          <div className="md:col-span-4 flex flex-col gap-6">
-            <div className="relative overflow-hidden rounded-3xl border border-cyan-400/20 bg-slate-900/70 p-6">
-              <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-cyan-200/80">Mobile mission deck</h2>
-              <p className="mt-2 text-sm text-slate-200/70">
-                Tap through prototype navigation flows built for crews in constant motion.
-              </p>
-              <div className="mt-6 flex justify-center">
-                <div className="relative aspect-[9/19] w-40 rounded-[2rem] border border-white/20 bg-gradient-to-br from-slate-800 via-slate-900 to-slate-950 p-3 shadow-2xl">
-                  <div className="absolute inset-x-8 top-2 h-1.5 rounded-full bg-white/10" />
-                  <div className="mt-6 flex h-full flex-col justify-between rounded-[1.5rem] border border-cyan-400/10 bg-slate-900/80 p-3">
-                    <div className="space-y-2">
-                      <div className="flex items-center justify-between text-[10px] font-semibold uppercase tracking-[0.3em] text-cyan-100/80">
-                        <span>Itinerary</span>
-                        <span>02:17</span>
-                      </div>
-                      <div className="rounded-2xl border border-cyan-400/20 bg-gradient-to-br from-cyan-500/20 to-transparent p-3 text-[11px] text-cyan-50">
-                        Dock 07 → Waypoint HN-4
-                      </div>
-                      <div className="space-y-2 text-[10px] text-slate-200/70">
-                        <div className="rounded-xl border border-white/10 bg-white/5 p-2">Crew status · Green</div>
-                        <div className="rounded-xl border border-white/10 bg-white/5 p-2">Cargo integrity · 98%</div>
-                      </div>
-                    </div>
-                    <button className="rounded-xl border border-cyan-300/30 bg-cyan-500/20 py-2 text-[10px] font-semibold uppercase tracking-[0.3em] text-cyan-100">
-                      Begin route
-                    </button>
-                  </div>
-                </div>
-              </div>
-            </div>
-            <div className="rounded-3xl border border-cyan-400/20 bg-slate-900/70 p-6">
-              <TopicShowcase />
-            </div>
-            <div className="rounded-3xl border border-cyan-400/20 bg-slate-900/70 p-6">
-              <SignalController />
-            </div>
+        <section className="axiom-section architecture observe-section" id="architecture">
+          <div className="section-heading text-reveal">
+            <h2>Architecture Constellation</h2>
+            <p>Five interacting nodes express how intelligence flows, monitors, and reconciles with human judgment.</p>
+          </div>
+          <div className="network-shell" role="presentation">
+            <svg className="network-lines" viewBox="0 0 600 400" aria-hidden="true">
+              <path className="network-line" d="M120 80 C220 20, 380 20, 480 80" />
+              <path className="network-line" d="M120 80 C200 200, 200 200, 300 200" />
+              <path className="network-line" d="M300 200 C360 120, 420 120, 480 80" />
+              <path className="network-line" d="M300 200 C360 280, 420 280, 480 320" />
+              <path className="network-line" d="M120 320 C220 380, 380 380, 480 320" />
+              <path className="network-line" d="M120 320 C200 200, 200 200, 300 200" />
+            </svg>
+            <ul className="network-nodes" aria-label="AI architecture nodes">
+              {architectureNodes.map((node, index) => (
+                <li
+                  key={node.id}
+                  className={`network-node text-reveal node-${index + 1}`}
+                  tabIndex={0}
+                  aria-describedby={`${node.id}-description`}
+                >
+                  <span className="node-label">{node.label}</span>
+                  <span id={`${node.id}-description`} className="node-description">
+                    {node.description}
+                  </span>
+                </li>
+              ))}
+            </ul>
           </div>
         </section>
 
-        <section className="grid gap-8 lg:grid-cols-[1.1fr_0.9fr]" id="subscribe">
-          <div className="rounded-3xl border border-cyan-400/20 bg-slate-900/70 p-8">
-            <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-cyan-200/80">Transmission log</h2>
-            <p className="mt-4 text-lg text-slate-200/80">
-              Monthly summaries arrive with behind-the-scenes sketches, logistic frameworks, and a curated soundtrack.
-            </p>
-            <form className="mt-6 flex flex-col gap-3 sm:flex-row">
-              <label className="sr-only" htmlFor="email">
-                Email
-              </label>
-              <input
-                id="email"
-                name="email"
-                type="email"
-                placeholder="you@station.mail"
-                className="w-full flex-1 rounded-full border border-white/10 bg-black/40 px-5 py-3 text-sm text-cyan-100 placeholder:text-slate-500 focus:border-cyan-300/60 focus:outline-none"
-              />
-              <button
-                type="submit"
-                className="inline-flex items-center justify-center rounded-full border border-cyan-300/40 bg-cyan-500/20 px-6 py-3 text-sm font-semibold uppercase tracking-[0.3em] text-cyan-100 transition hover:bg-cyan-400/30"
-              >
-                Join manifest
-              </button>
-            </form>
-            <p className="mt-3 text-xs text-slate-400/80">
-              No spam. Just field-tested insights and prototypes you can adapt for your own missions.
+        <section className="axiom-section observe-section" id="narrative">
+          <div className="section-heading text-reveal">
+            <h2>Scroll Narrative</h2>
+            <p>Text reveals occur at a 70% viewport threshold with blur-to-clear transitions and subtle color sweeps.</p>
+          </div>
+          <div className="narrative-columns">
+            {timeline.map(item => (
+              <article key={item.title} className="narrative-card text-reveal">
+                <h3>{item.title}</h3>
+                <p>{item.copy}</p>
+              </article>
+            ))}
+          </div>
+          <div className="philosophy text-reveal">
+            <h3>Design Philosophy</h3>
+            <ul>
+              {manifesto.map(point => (
+                <li key={point.heading}>
+                  <strong>{point.heading}</strong>
+                  <span>{point.body}</span>
+                </li>
+              ))}
+            </ul>
+          </div>
+        </section>
+
+        <section className="axiom-section observe-section highlights">
+          <div className="section-heading text-reveal">
+            <h2>Highlights</h2>
+            <p>
+              Hover over each phrase to surface contextual insights. Tooltips stay within viewport and respect focus for keyboard
+              navigation.
             </p>
           </div>
+          <p className="highlight-text" aria-live="polite">
+            {highlights.map(highlight => (
+              <span key={highlight.phrase} className="highlight-phrase" data-tooltip={highlight.tooltip}>
+                {highlight.phrase}
+              </span>
+            ))}
+          </p>
+        </section>
 
-          <div className="rounded-3xl border border-violet-400/20 bg-gradient-to-br from-violet-500/10 via-slate-900/70 to-cyan-500/10 p-8">
-            <h2 className="text-sm font-semibold uppercase tracking-[0.3em] text-violet-100/80">Latest artifacts</h2>
-            <div className="mt-6 space-y-5 text-sm text-slate-200/80">
-              <div className="rounded-2xl border border-white/10 bg-white/5 p-4">
-                <p className="font-semibold text-slate-50">Halcyon Logistics branding set</p>
-                <p className="mt-1 text-xs uppercase tracking-[0.3em] text-slate-400">Vector kit · Updated weekly</p>
-              </div>
-              <div className="rounded-2xl border border-white/10 bg-white/5 p-4">
-                <p className="font-semibold text-slate-50">Interactive Bento grid templates</p>
-                <p className="mt-1 text-xs uppercase tracking-[0.3em] text-slate-400">Figma + code pack</p>
-              </div>
-              <div className="rounded-2xl border border-white/10 bg-white/5 p-4">
-                <p className="font-semibold text-slate-50">Ambient Logistics — Issue 02 zine</p>
-                <p className="mt-1 text-xs uppercase tracking-[0.3em] text-slate-400">Print ready · Limited run</p>
-              </div>
-            </div>
-            <button className="mt-6 w-full rounded-full border border-violet-200/30 bg-black/40 px-6 py-3 text-sm font-semibold uppercase tracking-[0.3em] text-violet-100 transition hover:border-violet-200/50">
-              Download asset index
-            </button>
+        <section className="axiom-section observe-section" id="faq">
+          <div className="section-heading text-reveal">
+            <h2>FAQ</h2>
+            <p>Accordions animate with smooth height transitions, easing, and accessible toggles.</p>
           </div>
+          <ul className="faq-list">
+            {faq.map((item, index) => {
+              const open = activeFaq === index
+              return (
+                <li key={item.question} className={`faq-item ${open ? 'is-open' : ''}`}>
+                  <button type="button" className="faq-toggle" onClick={() => toggleFaq(index)} aria-expanded={open}>
+                    <span>{item.question}</span>
+                    <span aria-hidden="true" className="faq-icon">
+                      {open ? '−' : '+'}
+                    </span>
+                  </button>
+                  <div className="faq-panel" role="region" aria-hidden={!open}>
+                    <p>{item.answer}</p>
+                  </div>
+                </li>
+              )
+            })}
+          </ul>
         </section>
-      </div>
-    </main>
+      </main>
+
+      <footer className="axiom-footer text-reveal" role="contentinfo">
+        <p>© {new Date().getFullYear()} Douglas Mitchell · Future-facing systems for curious humans.</p>
+        <a className="axiom-button axiom-button--ghost" href="#top">
+          Return to origin
+        </a>
+      </footer>
+    </>
   )
 }
diff --git a/evidence/F1.txt b/evidence/F1.txt
index f870c23..5c6249d 100644
--- a/evidence/F1.txt
+++ b/evidence/F1.txt
@@ -1,2 +1,3 @@
-              Halcyon Logistics
-                <p className="font-semibold text-slate-50">Halcyon Logistics branding set</p>
+$ rg -n "hero-letter" app/page.tsx
+137:        <span key={`${character}-${index}`} className="hero-letter" aria-hidden="true">
+250:      const letters = gsap.utils.toArray<HTMLElement>('.hero-letter')
diff --git a/evidence/F2.txt b/evidence/F2.txt
index a7ed5ba..2852015 100644
--- a/evidence/F2.txt
+++ b/evidence/F2.txt
@@ -1 +1,3 @@
-    label: 'Field Operations',
+$ rg -n "nav-progress" app/page.tsx
+360:        <div className="nav-progress" aria-hidden="true">
+361:          <div className="nav-progress-bar" ref={progressRef} />
diff --git a/evidence/F3.txt b/evidence/F3.txt
index d5b5f33..e58eb6d 100644
--- a/evidence/F3.txt
+++ b/evidence/F3.txt
@@ -1 +1,3 @@
-          type="range"
+$ rg -n "IntersectionObserver" app/page.tsx
+151:    const sectionObserver = new IntersectionObserver(
+166:    const textObserver = new IntersectionObserver(
diff --git a/evidence/F4.txt b/evidence/F4.txt
index 54d9b53..8391ca0 100644
--- a/evidence/F4.txt
+++ b/evidence/F4.txt
@@ -1 +1,8 @@
-    title: 'Dispatch #014 — Frequencies for Focus',
+$ rg -n "network-line" app/page.tsx
+427:            <svg className="network-lines" viewBox="0 0 600 400" aria-hidden="true">
+428:              <path className="network-line" d="M120 80 C220 20, 380 20, 480 80" />
+429:              <path className="network-line" d="M120 80 C200 200, 200 200, 300 200" />
+430:              <path className="network-line" d="M300 200 C360 120, 420 120, 480 80" />
+431:              <path className="network-line" d="M300 200 C360 280, 420 280, 480 320" />
+432:              <path className="network-line" d="M120 320 C220 380, 380 380, 480 320" />
+433:              <path className="network-line" d="M120 320 C200 200, 200 200, 300 200" />
diff --git a/evidence/F5.txt b/evidence/F5.txt
index e94cdd4..b614425 100644
--- a/evidence/F5.txt
+++ b/evidence/F5.txt
@@ -1 +1,5 @@
-                Join manifest
+$ rg -n "faq-panel" app/globals.css
+726:.faq-panel {
+733:.faq-item.is-open .faq-panel {
+738:.faq-panel p {
+887:  .faq-panel {
diff --git a/features.json b/features.json
index c196ea0..e8a685f 100644
--- a/features.json
+++ b/features.json
@@ -1,32 +1,32 @@
 [
   {
     "id": "F1",
-    "feature": "Hero proclaims the Halcyon Logistics identity and outlines multi-format content.",
-    "command": "rg \"Halcyon Logistics\" app/page.tsx",
-    "expected_signal": "Matches display the Halcyon Logistics label and supporting references in the hero card."
+    "feature": "Hero letters animate with GSAP staggered timeline.",
+    "command": "rg -n \"hero-letter\" app/page.tsx",
+    "expected_signal": "Output lists hero-letter markup and GSAP query registration."
   },
   {
     "id": "F2",
-    "feature": "Topic showcase enables switching between logistics, design systems, and media focuses.",
-    "command": "rg \"Field Operations\" components/TopicShowcase.tsx",
-    "expected_signal": "The Field Operations label appears within the interactive topic dataset."
+    "feature": "Sticky navigation renders a scroll progress indicator tied to progressRef.",
+    "command": "rg -n \"nav-progress\" app/page.tsx",
+    "expected_signal": "Matches show the progress container and ref-linked bar."
   },
   {
     "id": "F3",
-    "feature": "Signal controller presents a range slider for tuning immersion level feedback.",
-    "command": "rg \"type=\\\"range\\\"\" components/SignalController.tsx",
-    "expected_signal": "The command surfaces the range input definition used for the immersion control."
+    "feature": "Sections and text reveals are controlled by IntersectionObserver thresholds.",
+    "command": "rg -n \"IntersectionObserver\" app/page.tsx",
+    "expected_signal": "Results surface both observers responsible for section and text activation."
   },
   {
     "id": "F4",
-    "feature": "Dispatch #014 audio log is highlighted among latest posts.",
-    "command": "rg \"Dispatch #014\" app/page.tsx",
-    "expected_signal": "Output shows the Dispatch #014 entry inside the posts data block."
+    "feature": "Architecture constellation draws animated node connections via SVG paths.",
+    "command": "rg -n \"network-line\" app/page.tsx",
+    "expected_signal": "Command prints the network-line paths used for the constellation graphic."
   },
   {
     "id": "F5",
-    "feature": "Subscribe section includes the Join manifest call-to-action.",
-    "command": "rg \"Join manifest\" app/page.tsx",
-    "expected_signal": "Result contains the Join manifest button label within the subscription form."
+    "feature": "FAQ accordion panels animate height transitions in global styles.",
+    "command": "rg -n \"faq-panel\" app/globals.css",
+    "expected_signal": "Output enumerates the CSS rules controlling accordion panel animation."
   }
 ]
diff --git a/package-lock.json b/package-lock.json
index 9212e3f..9046d1d 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -8,6 +8,7 @@
       "name": "ultimate-dynamic-portfolio",
       "version": "0.1.0",
       "dependencies": {
+        "gsap": "^3.13.0",
         "next": "^14.2.32",
         "react": "18.3.1",
         "react-dom": "18.3.1"
@@ -2954,6 +2955,12 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/gsap": {
+      "version": "3.13.0",
+      "resolved": "https://registry.npmjs.org/gsap/-/gsap-3.13.0.tgz",
+      "integrity": "sha512-QL7MJ2WMjm1PHWsoFrAQH/J8wUeqZvMtHO58qdekHpCfhvhSL4gSiz6vJf5EeMP0LOn3ZCprL2ki/gjED8ghVw==",
+      "license": "Standard 'no charge' license: https://gsap.com/standard-license."
+    },
     "node_modules/has-bigints": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
diff --git a/package.json b/package.json
index 640a4f9..7637dc1 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
     "export": "next build && next export"
   },
   "dependencies": {
+    "gsap": "^3.13.0",
     "next": "^14.2.32",
     "react": "18.3.1",
     "react-dom": "18.3.1"
